{"version":3,"file":"static/js/443.81bb1a0b.chunk.js","mappings":"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","sources":["pages/CategoryProducts.tsx","components/ProductCard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport paint from '../images/paint2.jpg'\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Slider,\r\n  Button,\r\n  IconButton,\r\n  useMediaQuery,\r\n  useTheme,\r\n  Drawer,\r\n  Pagination\r\n} from '@mui/material';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ProductCard from '../components/ProductCard';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n// import { getProductsByCategory } from '../services/productService';\r\nimport { Product } from '../types/product';\r\n\r\nconst CategoryProducts: React.FC = () => {\r\n  const { category } = useParams<{ category: string }>();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  // State for products and loading\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [sortBy, setSortBy] = useState('title');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [priceRange, setPriceRange] = useState<[number, number]>([0, 1000]);\r\n\r\n  const productsPerPage = 12;\r\n\r\n  // Fetch products from API\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      if (!category) return;\r\n      \r\n      setLoading(true);\r\n      try {\r\n        // const productsData = await getProductsByCategory(category);\r\n        // setProducts(productsData);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, [category]);\r\n\r\n  const handleSortChange = (event: any) => {\r\n    setSortBy(event.target.value);\r\n  };\r\n\r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePriceChange = (event: any, newValue: number | number[]) => {\r\n    setPriceRange(newValue as [number, number]);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setCurrentPage(value);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setSortBy('title');\r\n    setSearchQuery('');\r\n    setPriceRange([0, 1000]);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const filteredProducts = products\r\n    .filter(product => \r\n      product.title.toLowerCase().includes(searchQuery.toLowerCase()) &&\r\n      product.price >= priceRange[0] &&\r\n      product.price <= priceRange[1]\r\n    )\r\n    .sort((a, b) => {\r\n      switch (sortBy) {\r\n        case 'title':\r\n          return a.title.localeCompare(b.title);\r\n        case 'priceAsc':\r\n          return a.price - b.price;\r\n        case 'priceDesc':\r\n          return b.price - a.price;\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n\r\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\r\n  const paginatedProducts = filteredProducts.slice(\r\n    (currentPage - 1) * productsPerPage,\r\n    currentPage * productsPerPage\r\n  );\r\n\r\n  const FilterContent = () => (\r\n    <Box sx={{ p: 2 ,        backgroundColor: 'white',\r\n      borderRadius: '10px',\r\n      padding: '10px',\r\n      boxShadow: '0 0 10px 0 rgba(0, 0, 0, 0.1)'}}>\r\n      <Box sx={{       display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 ,\r\n\r\n      }}>\r\n        <Typography variant=\"h6\">{t('products.filters.title')}</Typography>\r\n        <IconButton onClick={() => setFilterOpen(false)}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <FormControl fullWidth sx={{ mb: 2 }}>\r\n        <InputLabel>{t('products.filters.sort')}</InputLabel>\r\n        <Select\r\n          value={sortBy}\r\n          label={t('products.filters.sort')}\r\n          onChange={handleSortChange}\r\n        >\r\n          <MenuItem value=\"title\">{t('products.filters.sortByName')}</MenuItem>\r\n          <MenuItem value=\"priceAsc\">{t('products.filters.sortByPriceAsc')}</MenuItem>\r\n          <MenuItem value=\"priceDesc\">{t('products.filters.sortByPriceDesc')}</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <TextField\r\n        fullWidth\r\n        label={t('products.filters.search')}\r\n        value={searchQuery}\r\n        onChange={handleSearchChange}\r\n        sx={{ mb: 2 }}\r\n      />\r\n\r\n      <Typography gutterBottom>{t('products.filters.priceRange')}</Typography>\r\n      <Slider\r\n        value={priceRange}\r\n        onChange={handlePriceChange}\r\n        valueLabelDisplay=\"auto\"\r\n        min={0}\r\n        max={1000}\r\n        sx={{ mb: 2 }}\r\n      />\r\n\r\n      <Button\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        onClick={resetFilters}\r\n        sx={{ mb: 2 }}\r\n      >\r\n        {t('products.filters.reset')}\r\n      </Button>\r\n    </Box>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ \r\n        backgroundImage: `url(${paint})`, \r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        minHeight: 'calc(100vh - 64px)',\r\n        color: 'white',\r\n        paddingTop: '100px',\r\n        paddingBottom: '40px'\r\n      }}>\r\n        <Container maxWidth=\"lg\">\r\n          <Box sx={{ textAlign: 'center', py: 8 }}>\r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n              Loading...\r\n            </Typography>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (products.length === 0) {\r\n    return (\r\n      <Box sx={{ \r\n        backgroundImage: `url(${paint})`, \r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        minHeight: 'calc(100vh - 64px)',\r\n        color: 'white',\r\n        paddingTop: '100px',\r\n        paddingBottom: '40px'\r\n      }}>\r\n        <Container maxWidth=\"lg\">\r\n          <Box sx={{ textAlign: 'center', py: 8 }}>\r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n              {category === 'digital-art' \r\n                ? t('products.categories.digitalArt')\r\n                : t(`products.categories.${category}`)\r\n              }\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n              {t('products.noProducts')}\r\n            </Typography>\r\n            <Button \r\n              variant=\"contained\" \r\n              onClick={() => navigate('/products')}\r\n              sx={{ mt: 3 }}\r\n            >\r\n              {t('common.backToProducts')}\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ \r\n      backgroundImage: `url(${paint})`, \r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n      backgroundRepeat: 'no-repeat',\r\n    minHeight: 'calc(100vh - 64px)',\r\n      color: 'white',\r\n      paddingTop: '100px',\r\n      paddingBottom: '40px'\r\n    }}>\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mb: 4 }}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            {category === 'digital-art' \r\n              ? t('products.categories.digitalArt')\r\n              : t(`products.categories.${category}`)\r\n            }\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n            {category === 'digital-art' \r\n              ? t('products.categories.digitalArtDescription')\r\n              : t(`products.categories.${category}Description`)\r\n            }\r\n          </Typography>\r\n        </Box>\r\n\r\n        {isMobile && (\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<FilterListIcon />}\r\n            onClick={() => setFilterOpen(true)}\r\n            sx={{ mb: 2 }}\r\n          >\r\n            {t('products.filters.title')}\r\n          </Button>\r\n        )}\r\n\r\n        <Grid container spacing={3}>\r\n          {!isMobile && (\r\n            <Grid item xs={12} md={3}>\r\n              <Box sx={{ position: 'sticky', top: '100px' }}>\r\n                <FilterContent />\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12} md={isMobile ? 12 : 9}>\r\n            {filteredProducts.length === 0 ? (\r\n              <Typography align=\"center\" color=\"text.secondary\">\r\n                {t('products.noProducts')}\r\n              </Typography>\r\n            ) : (\r\n              <>\r\n                <Grid container spacing={3}>\r\n                  {paginatedProducts.map((product) => (\r\n                    <Grid item xs={12} sm={6} md={4} key={product.id}>\r\n                      <ProductCard product={product} />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n\r\n                {totalPages > 1 && (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n                    <Pagination\r\n                      count={totalPages}\r\n                      page={currentPage}\r\n                      onChange={handlePageChange}\r\n                      color=\"primary\"\r\n                      size=\"large\"\r\n                      sx={{\r\n                        '& .MuiPaginationItem-root': {\r\n                          color: 'white',\r\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n                          '&:hover': {\r\n                            backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n                          },\r\n                        },\r\n                        '& .Mui-selected': {\r\n                          backgroundColor: 'white',\r\n                          color: 'black',\r\n                          '&:hover': {\r\n                            backgroundColor: 'white',\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                )}\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={filterOpen}\r\n          onClose={() => setFilterOpen(false)}\r\n        >\r\n          <Box sx={{ width: 280 }}>\r\n            <FilterContent />\r\n          </Box>\r\n        </Drawer>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CategoryProducts; ","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Chip\r\n} from '@mui/material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Product } from '../types/product';\r\nimport hero from '../images/hero.jpg'; // Fallback image\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\ninterface ProductCardProps {\r\n  product: Product;\r\n}\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({ product }) => {\r\n  const { id, title, description, price, imageUrl, category, artist, year, dimensions } = product;\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const handleImageError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n    e.currentTarget.src = hero;\r\n  };\r\n\r\n  const handleProductClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    navigate(`/product/${id}`);\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card \r\n      sx={{ \r\n        height: '500px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        transition: 'transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out',\r\n        '&:hover': {\r\n          transform: 'translateY(-8px)',\r\n          boxShadow: '0 12px 20px rgba(0, 0, 0, 0.1)',\r\n        },\r\n        boxShadow: 4,\r\n        borderRadius: '12px',\r\n        overflow: 'hidden',\r\n        backgroundColor: 'var(--secondary-main)',\r\n        width: '100%',\r\n        maxWidth: '300px'\r\n      }}\r\n    >\r\n      <Link to={`/product/${id}`} style={{ textDecoration: 'none', color: 'inherit' }} onClick={handleProductClick}>\r\n        <Box sx={{ width: '100%', height: 250, overflow: 'hidden', borderRadius: '8px' }}>\r\n          <LazyLoadImage\r\n            src={imageUrl}\r\n            alt={title}\r\n            effect=\"blur\"\r\n            width=\"100%\"\r\n            height={250}\r\n            style={{ objectFit: 'cover', borderRadius: '8px', width: '85%', height: '100%', padding: '20px' }}\r\n            onError={handleImageError}\r\n          />\r\n        </Box>\r\n        <CardContent sx={{ flexGrow: 1, p: 2 }}>\r\n          <Box sx={{ mb: 1 }}>\r\n            <Chip \r\n              label={t(`categories.${category}.title`, category)}\r\n              size=\"small\"\r\n              sx={{ \r\n                backgroundColor: '#8B4513',\r\n                color: 'white',\r\n                fontSize: '0.75rem',\r\n                height: '24px'\r\n              }}\r\n            />\r\n          </Box>\r\n          <Typography \r\n            gutterBottom \r\n            variant=\"h6\" \r\n            component=\"div\"\r\n            sx={{ \r\n              fontWeight: 600,\r\n              color: 'white',\r\n              mb: 1,\r\n              fontSize: '1.1rem',\r\n              lineHeight: 1.4\r\n            }}\r\n          >\r\n            {t(`products.${id}.title`, title)}\r\n          </Typography>\r\n          <Typography \r\n            variant=\"body2\" \r\n            sx={{ \r\n              mb: 1,\r\n              fontSize: '0.9rem',\r\n              lineHeight: 1.5,\r\n              color: 'white',\r\n            }}\r\n          >\r\n            {t(`products.${id}.description`, description)}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n            <b>{t('product.artist', 'Artist')}:</b> {artist}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n            <b>{t('product.price', 'Price')}:</b> ₼{price}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n            <b>{t('product.year', 'Year')}:</b> {year}\r\n          </Typography>\r\n          {dimensions && (\r\n            <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n              <b>{t('product.dimensions', 'Dimensions')}:</b> {dimensions}\r\n            </Typography>\r\n          )}\r\n          <Box sx={{ \r\n            display: 'flex', \r\n            justifyContent: 'flex-end', \r\n            alignItems: 'center',\r\n            mt: 'auto'\r\n          }}>\r\n            <Typography \r\n              variant=\"h6\" \r\n              sx={{ \r\n                fontWeight: 600,\r\n                color: 'white',\r\n              }}\r\n            >\r\n              ₼{price.toFixed(2)}\r\n            </Typography>\r\n          </Box>\r\n        </CardContent>\r\n      </Link>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;"],"names":["CategoryProducts","category","useParams","navigate","useNavigate","t","useTranslation","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","products","setProducts","useState","loading","setLoading","sortBy","setSortBy","searchQuery","setSearchQuery","currentPage","setCurrentPage","filterOpen","setFilterOpen","priceRange","setPriceRange","useEffect","async","fetchProducts","handleSortChange","event","target","value","handleSearchChange","handlePriceChange","newValue","resetFilters","filteredProducts","filter","product","title","toLowerCase","includes","price","sort","a","b","localeCompare","totalPages","Math","ceil","length","paginatedProducts","slice","FilterContent","_jsxs","Box","sx","p","backgroundColor","borderRadius","padding","boxShadow","children","display","justifyContent","alignItems","mb","_jsx","Typography","variant","IconButton","onClick","CloseIcon","FormControl","fullWidth","InputLabel","Select","label","onChange","MenuItem","TextField","gutterBottom","Slider","valueLabelDisplay","min","max","Button","backgroundImage","concat","paint","backgroundSize","backgroundPosition","backgroundRepeat","minHeight","color","paddingTop","paddingBottom","Container","maxWidth","textAlign","py","component","mt","startIcon","FilterListIcon","Grid","container","spacing","item","xs","md","position","top","align","_Fragment","map","sm","ProductCard","id","Pagination","count","page","handlePageChange","window","scrollTo","behavior","size","Drawer","anchor","open","onClose","width","_ref","description","imageUrl","artist","year","dimensions","Card","height","flexDirection","transition","transform","overflow","Link","to","style","textDecoration","e","preventDefault","left","LazyLoadImage","src","alt","effect","objectFit","onError","currentTarget","hero","CardContent","flexGrow","Chip","fontSize","fontWeight","lineHeight","toFixed"],"sourceRoot":""}