{"version":3,"file":"static/js/864.d3cfa357.chunk.js","mappings":"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","sources":["components/ProductCard.tsx","components/ProductFilters.tsx","pages/products/Sculptures.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Chip\r\n} from '@mui/material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Product } from '../types/product';\r\nimport hero from '../images/hero.jpg'; // Fallback image\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\ninterface ProductCardProps {\r\n  product: Product;\r\n}\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({ product }) => {\r\n  const { id, title, description, price, imageUrl, category, artist, year, dimensions } = product;\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const handleImageError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n    e.currentTarget.src = hero;\r\n  };\r\n\r\n  const handleProductClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    navigate(`/product/${id}`);\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card \r\n      sx={{ \r\n        height: '500px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        transition: 'transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out',\r\n        '&:hover': {\r\n          transform: 'translateY(-8px)',\r\n          boxShadow: '0 12px 20px rgba(0, 0, 0, 0.1)',\r\n        },\r\n        boxShadow: 4,\r\n        borderRadius: '12px',\r\n        overflow: 'hidden',\r\n        backgroundColor: 'var(--secondary-main)',\r\n        width: '100%',\r\n        maxWidth: '300px'\r\n      }}\r\n    >\r\n      <Link to={`/product/${id}`} style={{ textDecoration: 'none', color: 'inherit' }} onClick={handleProductClick}>\r\n        <Box sx={{ width: '100%', height: 250, overflow: 'hidden', borderRadius: '8px' }}>\r\n          <LazyLoadImage\r\n            src={imageUrl}\r\n            alt={title}\r\n            effect=\"blur\"\r\n            width=\"100%\"\r\n            height={250}\r\n            style={{ objectFit: 'cover', borderRadius: '8px', width: '85%', height: '100%', padding: '20px' }}\r\n            onError={handleImageError}\r\n          />\r\n        </Box>\r\n        <CardContent sx={{ flexGrow: 1, p: 2 }}>\r\n          <Box sx={{ mb: 1 }}>\r\n            <Chip \r\n              label={t(`categories.${category}.title`, category)}\r\n              size=\"small\"\r\n              sx={{ \r\n                backgroundColor: '#8B4513',\r\n                color: 'white',\r\n                fontSize: '0.75rem',\r\n                height: '24px'\r\n              }}\r\n            />\r\n          </Box>\r\n          <Typography \r\n            gutterBottom \r\n            variant=\"h6\" \r\n            component=\"div\"\r\n            sx={{ \r\n              fontWeight: 600,\r\n              color: 'white',\r\n              mb: 1,\r\n              fontSize: '1.1rem',\r\n              lineHeight: 1.4\r\n            }}\r\n          >\r\n            {t(`products.${id}.title`, title)}\r\n          </Typography>\r\n          <Typography \r\n            variant=\"body2\" \r\n            sx={{ \r\n              mb: 1,\r\n              fontSize: '0.9rem',\r\n              lineHeight: 1.5,\r\n              color: 'white',\r\n            }}\r\n          >\r\n            {t(`products.${id}.description`, description)}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n            <b>{t('product.artist', 'Artist')}:</b> {artist}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n            <b>{t('product.price', 'Price')}:</b> ₼{price}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n            <b>{t('product.year', 'Year')}:</b> {year}\r\n          </Typography>\r\n          {dimensions && (\r\n            <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n              <b>{t('product.dimensions', 'Dimensions')}:</b> {dimensions}\r\n            </Typography>\r\n          )}\r\n          <Box sx={{ \r\n            display: 'flex', \r\n            justifyContent: 'flex-end', \r\n            alignItems: 'center',\r\n            mt: 'auto'\r\n          }}>\r\n            <Typography \r\n              variant=\"h6\" \r\n              sx={{ \r\n                fontWeight: 600,\r\n                color: 'white',\r\n              }}\r\n            >\r\n              ₼{price.toFixed(2)}\r\n            </Typography>\r\n          </Box>\r\n        </CardContent>\r\n      </Link>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;","import React  from 'react';\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Slider,\r\n  Button,\r\n  IconButton,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n  Drawer\r\n} from '@mui/material';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useState } from 'react';\r\n\r\ninterface ProductFiltersProps {\r\n  searchQuery: string;\r\n  onSearchChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  sortBy: string;\r\n  onSortChange: (event: any) => void;\r\n  priceRange: [number, number];\r\n  onPriceChange: (event: any, newValue: number | number[]) => void;\r\n  onResetFilters: () => void;\r\n  filterOpen: boolean;\r\n  onFilterOpenChange: (open: boolean) => void;\r\n  maxPrice?: number;\r\n}\r\n\r\nconst ProductFilters: React.FC<ProductFiltersProps> = ({\r\n  searchQuery,\r\n  onSearchChange,\r\n  sortBy,\r\n  onSortChange,\r\n  onPriceChange,\r\n  onResetFilters,\r\n  filterOpen,\r\n  onFilterOpenChange,\r\n  maxPrice = 20000\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const [priceRange, setPriceRange] = useState<[number, number]>([0, 20000]);\r\n\r\n\r\n  const FilterContent = () => (\r\n    <Box sx={{ \r\n      p: 2,\r\n      backgroundColor: 'var(--secondary-main)',\r\n      borderRadius: '10px',\r\n      padding: '20px',\r\n      boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)',\r\n      border: '1px solid rgba(255, 255, 255, 0.2)',\r\n      backdropFilter: 'blur(10px)',\r\n    }}>\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center', \r\n        mb: 3 \r\n      }}>\r\n        <Typography variant=\"h6\" sx={{ color: 'white', fontWeight: 600 }}>\r\n          {t('products.filters.title')}\r\n        </Typography>\r\n        {isMobile && (\r\n          <IconButton \r\n            onClick={() => onFilterOpenChange(false)}\r\n            sx={{ color: 'white' }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n\r\n      <FormControl fullWidth sx={{ mb: 3 }}>\r\n        <InputLabel sx={{ color: 'white' }}>{t('products.filters.sort')}</InputLabel>\r\n        <Select\r\n          value={sortBy}\r\n          label={t('products.filters.sort')}\r\n          onChange={onSortChange}\r\n          sx={{\r\n            color: 'white',\r\n            '& .MuiOutlinedInput-notchedOutline': {\r\n              borderColor: 'rgba(255, 255, 255, 0.5)',\r\n            },\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n              borderColor: 'rgba(255, 255, 255, 0.8)',\r\n            },\r\n            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n              borderColor: 'white',\r\n            },\r\n            '& .MuiSvgIcon-root': {\r\n              color: 'white',\r\n            },\r\n          }}\r\n        >\r\n          <MenuItem value=\"title\">{t('products.filters.sortByName')}</MenuItem>\r\n          <MenuItem value=\"priceAsc\">{t('products.filters.sortByPriceAsc')}</MenuItem>\r\n          <MenuItem value=\"priceDesc\">{t('products.filters.sortByPriceDesc')}</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <TextField\r\n        fullWidth\r\n        label={t('products.filters.search')}\r\n        value={searchQuery}\r\n        onChange={onSearchChange}\r\n        sx={{ \r\n          mb: 3,\r\n          '& .MuiOutlinedInput-root': {\r\n            color: 'white',\r\n            '& fieldset': {\r\n              borderColor: 'rgba(255, 255, 255, 0.5)',\r\n            },\r\n            '&:hover fieldset': {\r\n              borderColor: 'rgba(255, 255, 255, 0.8)',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n              borderColor: 'white',\r\n            },\r\n          },\r\n          '& .MuiInputLabel-root': {\r\n            color: 'white',\r\n            '&.Mui-focused': {\r\n              color: 'white',\r\n            },\r\n          },\r\n        }}\r\n      />\r\n\r\n      <Typography gutterBottom sx={{ color: 'white', fontWeight: 500, mb: 1 }}>\r\n        {t('products.filters.priceRange')}\r\n      </Typography>\r\n      <Slider\r\n        value={priceRange}\r\n        onChange={onPriceChange}\r\n        valueLabelDisplay=\"auto\"\r\n        min={0}\r\n        max={20000}\r\n        sx={{ \r\n          mb: 3,\r\n          '& .MuiSlider-track': {\r\n            backgroundColor: 'white',\r\n          },\r\n          '& .MuiSlider-rail': {\r\n            backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n          },\r\n          '& .MuiSlider-thumb': {\r\n            backgroundColor: 'white',\r\n            '&:hover': {\r\n              backgroundColor: 'white',\r\n            },\r\n          },\r\n          '& .MuiSlider-valueLabel': {\r\n            backgroundColor: 'white',\r\n            color: 'var(--secondary-main)',\r\n          },\r\n        }}\r\n      />\r\n\r\n      <Button\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        onClick={onResetFilters}\r\n        sx={{ \r\n          mb: 2,\r\n          color: 'white',\r\n          borderColor: 'white',\r\n          '&:hover': {\r\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n            borderColor: 'white',\r\n          },\r\n        }}\r\n      >\r\n        {t('products.filters.reset')}\r\n      </Button>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {isMobile && (\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<FilterListIcon />}\r\n          onClick={() => onFilterOpenChange(true)}\r\n          sx={{ \r\n            mb: 2,\r\n            color: 'var(--secondary-main)',\r\n            borderColor: 'var(--secondary-main)',\r\n            '&:hover': {\r\n              backgroundColor: 'rgba(210, 180, 140, 0.1)',\r\n              borderColor: 'var(--secondary-main)',\r\n            },\r\n          }}\r\n        >\r\n          {t('products.filters.title')}\r\n        </Button>\r\n      )}\r\n\r\n      {!isMobile && <FilterContent />}\r\n\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={filterOpen}\r\n        onClose={() => onFilterOpenChange(false)}\r\n        PaperProps={{\r\n          sx: {\r\n            backgroundColor: 'var(--secondary-main)',\r\n          }\r\n        }}\r\n      >\r\n        <Box sx={{ width: 280 }}>\r\n          <FilterContent />\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductFilters;","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { \r\n  Box, \r\n  Container, \r\n  Typography, \r\n  Grid, \r\n  Pagination,\r\n  useMediaQuery,\r\n  useTheme\r\n} from '@mui/material';\r\n// import { getProductsByCategory } from '../../services/productService';\r\nimport { Product } from '../../types/product';\r\nimport ProductCard from '../../components/ProductCard';\r\nimport ProductFilters from '../../components/ProductFilters';\r\nimport { useTranslation } from 'react-i18next';\r\nimport sculpturesBg from '../../images/categories/sculptures.jpg';\r\n\r\nconst Sculptures: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  // State for products and loading\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Filter states\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [sortBy, setSortBy] = useState('title');\r\n  const [priceRange, setPriceRange] = useState<[number, number]>([0, 6000]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n\r\n  const productsPerPage = 12;\r\n\r\n  // Fetch products from API\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch('/src/data/products.json');\r\n        const data = await response.json();\r\n        // Map and filter for 'sculptures' category\r\n        const mapped = data.map((product: any) => ({\r\n          id: product.id,\r\n          title: product.name, // use 'name' from JSON as 'title'\r\n          description: product.description || '',\r\n          price: product.price || 0,\r\n          category: product.category || 'paintings',\r\n          imageUrl: product.imageUrl || '',\r\n          featured: product.featured || false,\r\n          artist: product.artist || '',\r\n          dimensions: product.dimensions || '',\r\n          year: product.year || 2023,\r\n        })).filter((product: Product) => product.category === 'sculptures');\r\n        setProducts(mapped);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Calculate max price for the slider\r\n  const maxPrice = Math.max(...products.map(p => p.price), 6000);\r\n\r\n  // Filter and sort products\r\n  const filteredProducts = useMemo(() => {\r\n    return products\r\n      .filter(product => \r\n        product.title.toLowerCase().includes(searchQuery.toLowerCase()) &&\r\n        product.price >= priceRange[0] &&\r\n        product.price <= priceRange[1]\r\n      )\r\n      .sort((a, b) => {\r\n        switch (sortBy) {\r\n          case 'title':\r\n            return a.title.localeCompare(b.title);\r\n          case 'priceAsc':\r\n            return a.price - b.price;\r\n          case 'priceDesc':\r\n            return b.price - a.price;\r\n          default:\r\n            return 0;\r\n        }\r\n      });\r\n  }, [products, searchQuery, sortBy, priceRange]);\r\n\r\n  // Pagination\r\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\r\n  const paginatedProducts = filteredProducts.slice(\r\n    (currentPage - 1) * productsPerPage,\r\n    currentPage * productsPerPage\r\n  );\r\n\r\n  // Event handlers\r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleSortChange = (event: any) => {\r\n    setSortBy(event.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePriceChange = (event: any, newValue: number | number[]) => {\r\n    setPriceRange(newValue as [number, number]);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setCurrentPage(value);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setSearchQuery('');\r\n    setSortBy('title');\r\n    setPriceRange([0, maxPrice]);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      position: 'relative',\r\n      minHeight: 'calc(100vh - 64px)',\r\n      color: 'white',\r\n      paddingTop: '100px',\r\n      paddingBottom: '40px',\r\n      backgroundImage: `url(${sculpturesBg})`,\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n      backgroundAttachment: 'fixed',\r\n      '&::before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n        zIndex: 0,\r\n      }\r\n    }}>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', zIndex: 1 }}>\r\n        <Typography \r\n          variant=\"h2\" \r\n          component=\"h1\" \r\n          gutterBottom \r\n          align=\"center\" \r\n          sx={{ \r\n            mb: 4, \r\n            color: 'var(--secondary-main)',\r\n            textShadow: '2px 2px 8px rgba(0, 0, 0, 0.8)',\r\n            fontWeight: 'bold'\r\n          }}\r\n        >\r\n          {t('categories.sculptures.title')}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" align=\"center\" sx={{ mb: 4, color: 'var(--secondary-main)', textShadow: '1px 1px 4px rgba(0, 0, 0, 0.8)' }}>\r\n          {t('categories.sculptures.description')}\r\n        </Typography>\r\n\r\n        <Grid container spacing={3}>\r\n          {!isMobile && (\r\n            <Grid item xs={12} md={3}>\r\n              <Box sx={{ position: 'sticky', top: '100px' }}>\r\n                <ProductFilters\r\n                  searchQuery={searchQuery}\r\n                  onSearchChange={handleSearchChange}\r\n                  sortBy={sortBy}\r\n                  onSortChange={handleSortChange}\r\n                  priceRange={priceRange}\r\n                  onPriceChange={handlePriceChange}\r\n                  onResetFilters={resetFilters}\r\n                  filterOpen={filterOpen}\r\n                  onFilterOpenChange={setFilterOpen}\r\n                  maxPrice={maxPrice}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12} md={isMobile ? 12 : 9}>\r\n            {isMobile && (\r\n              <ProductFilters\r\n                searchQuery={searchQuery}\r\n                onSearchChange={handleSearchChange}\r\n                sortBy={sortBy}\r\n                onSortChange={handleSortChange}\r\n                priceRange={priceRange}\r\n                onPriceChange={handlePriceChange}\r\n                onResetFilters={resetFilters}\r\n                filterOpen={filterOpen}\r\n                onFilterOpenChange={setFilterOpen}\r\n                maxPrice={maxPrice}\r\n              />\r\n            )}\r\n\r\n            {filteredProducts.length === 0 ? (\r\n              <Typography align=\"center\" color=\"text.secondary\" sx={{ py: 8 }}>\r\n                {t('products.noProducts')}\r\n              </Typography>\r\n            ) : (\r\n              <>\r\n                <Grid container spacing={4}>\r\n                  {paginatedProducts.map(product => (\r\n                    <Grid item xs={12} sm={6} md={4} key={product.id}>\r\n                      <ProductCard product={product} />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n\r\n                {totalPages > 1 && (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n                    <Pagination\r\n                      count={totalPages}\r\n                      page={currentPage}\r\n                      onChange={handlePageChange}\r\n                      color=\"primary\"\r\n                      size=\"large\"\r\n                      sx={{\r\n                        '& .MuiPaginationItem-root': {\r\n                          backgroundColor: 'var(--secondary-main)',\r\n                          color: '#8B4513',\r\n                          '&:hover': {\r\n                            backgroundColor: 'rgba(139, 69, 19, 0.1)',\r\n                          },\r\n                          '&.Mui-selected': {\r\n                            backgroundColor: '#8B4513',\r\n                            color: 'white',\r\n                            '&:hover': {\r\n                              backgroundColor: '#8B4513',\r\n                            },\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                )}\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sculptures; "],"names":["_ref","product","id","title","description","price","imageUrl","category","artist","year","dimensions","navigate","useNavigate","t","useTranslation","_jsx","Card","sx","height","display","flexDirection","transition","transform","boxShadow","borderRadius","overflow","backgroundColor","width","maxWidth","children","_jsxs","Link","to","concat","style","textDecoration","color","onClick","e","preventDefault","window","scrollTo","top","left","behavior","Box","LazyLoadImage","src","alt","effect","objectFit","padding","onError","currentTarget","hero","CardContent","flexGrow","p","mb","Chip","label","size","fontSize","Typography","gutterBottom","variant","component","fontWeight","lineHeight","justifyContent","alignItems","mt","toFixed","searchQuery","onSearchChange","sortBy","onSortChange","onPriceChange","onResetFilters","filterOpen","onFilterOpenChange","maxPrice","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","priceRange","setPriceRange","useState","FilterContent","border","backdropFilter","IconButton","CloseIcon","FormControl","fullWidth","InputLabel","Select","value","onChange","borderColor","MenuItem","TextField","Slider","valueLabelDisplay","min","max","Button","_Fragment","startIcon","FilterListIcon","Drawer","anchor","open","onClose","PaperProps","Sculptures","products","setProducts","loading","setLoading","setSearchQuery","setSortBy","currentPage","setCurrentPage","setFilterOpen","useEffect","async","response","fetch","mapped","json","map","name","featured","filter","error","console","fetchProducts","Math","filteredProducts","useMemo","toLowerCase","includes","sort","a","b","localeCompare","totalPages","ceil","length","paginatedProducts","slice","handleSearchChange","event","target","handleSortChange","handlePriceChange","newValue","resetFilters","position","minHeight","paddingTop","paddingBottom","backgroundImage","sculpturesBg","backgroundSize","backgroundPosition","backgroundAttachment","content","right","bottom","zIndex","Container","align","textShadow","Grid","container","spacing","item","xs","md","ProductFilters","py","sm","ProductCard","Pagination","count","page","handlePageChange"],"sourceRoot":""}