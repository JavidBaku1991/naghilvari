{"version":3,"file":"static/js/398.cd0b6f02.chunk.js","mappings":"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","sources":["components/ProductCard.tsx","pages/CategoryProducts.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Box,\r\n  Chip\r\n} from '@mui/material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport heroImg from '../images/hero.jpeg';\r\nimport { Product } from '../types/product';\r\n\r\ninterface ProductCardProps {\r\n  product: Product;\r\n}\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({ product }) => {\r\n  const { id, title, description, price, imageUrl, category, artist, year, dimensions } = product;\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  // Function to handle image loading errors\r\n  const handleImageError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n    e.currentTarget.src = heroImg; // Fallback image\r\n  };\r\n\r\n  const handleProductClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    // Navigate to product detail and scroll to top\r\n    navigate(`/product/${id}`);\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card \r\n      sx={{ \r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        transition: 'transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out',\r\n        '&:hover': {\r\n          transform: 'translateY(-8px)',\r\n          boxShadow: '0 12px 20px rgba(0, 0, 0, 0.1)',\r\n        },\r\n        boxShadow: 4,\r\n        borderRadius: '12px',\r\n        overflow: 'hidden',\r\n        backgroundColor: 'var(--secondary-main)',\r\n        width: '100%',\r\n        maxWidth: '300px'\r\n      }}\r\n    >\r\n      <Link to={`/product/${id}`} style={{ textDecoration: 'none', color: 'inherit' }} onClick={handleProductClick}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"200\"\r\n          image={imageUrl}\r\n          alt={title}\r\n          onError={handleImageError}\r\n          sx={{\r\n            objectFit: 'cover',\r\n            transition: 'transform 0.3s ease-in-out',\r\n            margin:'10px' ,\r\n            '&:hover': {\r\n              transform: 'scale(1.05)',\r\n            },\r\n            width: '100%',\r\n            height: '200px'\r\n          }}\r\n        />\r\n        <CardContent sx={{ flexGrow: 1, p: 2 }}>\r\n          <Box sx={{ mb: 1 }}>\r\n            <Chip \r\n              label={t(`categories.${category}.title`, category)}\r\n              size=\"small\"\r\n              sx={{ \r\n                backgroundColor: '#8B4513',\r\n                color: 'white',\r\n                fontSize: '0.75rem',\r\n                height: '24px'\r\n              }}\r\n            />\r\n          </Box>\r\n          <Typography \r\n            gutterBottom \r\n            variant=\"h6\" \r\n            component=\"div\"\r\n            sx={{ \r\n              fontWeight: 600,\r\n              color: 'white',\r\n              mb: 1,\r\n              fontSize: '1.1rem',\r\n              lineHeight: 1.4\r\n            }}\r\n          >\r\n            {t(`products.${id}.title`, title)}\r\n          </Typography>\r\n          <Typography \r\n            variant=\"body2\" \r\n            sx={{ \r\n              mb: 1,\r\n              fontSize: '0.9rem',\r\n              lineHeight: 1.5,\r\n              color: 'white',\r\n            }}\r\n          >\r\n            {t(`products.${id}.description`, description)}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n            <b>{t('product.artist', 'Artist')}:</b> {artist}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n            <b>{t('product.price', 'Price')}:</b> ₼{price}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n            <b>{t('product.year', 'Year')}:</b> {year}\r\n          </Typography>\r\n          {dimensions && (\r\n            <Typography variant=\"body2\" sx={{ color: 'white', mb: 0.5 }}>\r\n              <b>{t('product.dimensions', 'Dimensions')}:</b> {dimensions}\r\n            </Typography>\r\n          )}\r\n          <Box sx={{ \r\n            display: 'flex', \r\n            justifyContent: 'flex-end', \r\n            alignItems: 'center',\r\n            mt: 'auto'\r\n          }}>\r\n            <Typography \r\n              variant=\"h6\" \r\n              sx={{ \r\n                fontWeight: 600,\r\n                color: 'white',\r\n              }}\r\n            >\r\n              ₼{price.toFixed(2)}\r\n            </Typography>\r\n          </Box>\r\n        </CardContent>\r\n      </Link>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport paint from '../images/paint2.jpg'\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Slider,\r\n  Button,\r\n  IconButton,\r\n  useMediaQuery,\r\n  useTheme,\r\n  Drawer,\r\n  Pagination\r\n} from '@mui/material';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ProductCard from '../components/ProductCard';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n// import { getProductsByCategory } from '../services/productService';\r\nimport { Product } from '../types/product';\r\n\r\nconst CategoryProducts: React.FC = () => {\r\n  const { category } = useParams<{ category: string }>();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  // State for products and loading\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [sortBy, setSortBy] = useState('title');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [priceRange, setPriceRange] = useState<[number, number]>([0, 1000]);\r\n\r\n  const productsPerPage = 12;\r\n\r\n  // Fetch products from API\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      if (!category) return;\r\n      \r\n      setLoading(true);\r\n      try {\r\n        // const productsData = await getProductsByCategory(category);\r\n        // setProducts(productsData);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, [category]);\r\n\r\n  const handleSortChange = (event: any) => {\r\n    setSortBy(event.target.value);\r\n  };\r\n\r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePriceChange = (event: any, newValue: number | number[]) => {\r\n    setPriceRange(newValue as [number, number]);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setCurrentPage(value);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setSortBy('title');\r\n    setSearchQuery('');\r\n    setPriceRange([0, 1000]);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const filteredProducts = products\r\n    .filter(product => \r\n      product.title.toLowerCase().includes(searchQuery.toLowerCase()) &&\r\n      product.price >= priceRange[0] &&\r\n      product.price <= priceRange[1]\r\n    )\r\n    .sort((a, b) => {\r\n      switch (sortBy) {\r\n        case 'title':\r\n          return a.title.localeCompare(b.title);\r\n        case 'priceAsc':\r\n          return a.price - b.price;\r\n        case 'priceDesc':\r\n          return b.price - a.price;\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n\r\n  const totalPages = Math.ceil(filteredProducts.length / productsPerPage);\r\n  const paginatedProducts = filteredProducts.slice(\r\n    (currentPage - 1) * productsPerPage,\r\n    currentPage * productsPerPage\r\n  );\r\n\r\n  const FilterContent = () => (\r\n    <Box sx={{ p: 2 ,        backgroundColor: 'white',\r\n      borderRadius: '10px',\r\n      padding: '10px',\r\n      boxShadow: '0 0 10px 0 rgba(0, 0, 0, 0.1)'}}>\r\n      <Box sx={{       display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 ,\r\n\r\n      }}>\r\n        <Typography variant=\"h6\">{t('products.filters.title')}</Typography>\r\n        <IconButton onClick={() => setFilterOpen(false)}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <FormControl fullWidth sx={{ mb: 2 }}>\r\n        <InputLabel>{t('products.filters.sort')}</InputLabel>\r\n        <Select\r\n          value={sortBy}\r\n          label={t('products.filters.sort')}\r\n          onChange={handleSortChange}\r\n        >\r\n          <MenuItem value=\"title\">{t('products.filters.sortByName')}</MenuItem>\r\n          <MenuItem value=\"priceAsc\">{t('products.filters.sortByPriceAsc')}</MenuItem>\r\n          <MenuItem value=\"priceDesc\">{t('products.filters.sortByPriceDesc')}</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <TextField\r\n        fullWidth\r\n        label={t('products.filters.search')}\r\n        value={searchQuery}\r\n        onChange={handleSearchChange}\r\n        sx={{ mb: 2 }}\r\n      />\r\n\r\n      <Typography gutterBottom>{t('products.filters.priceRange')}</Typography>\r\n      <Slider\r\n        value={priceRange}\r\n        onChange={handlePriceChange}\r\n        valueLabelDisplay=\"auto\"\r\n        min={0}\r\n        max={1000}\r\n        sx={{ mb: 2 }}\r\n      />\r\n\r\n      <Button\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        onClick={resetFilters}\r\n        sx={{ mb: 2 }}\r\n      >\r\n        {t('products.filters.reset')}\r\n      </Button>\r\n    </Box>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ \r\n        backgroundImage: `url(${paint})`, \r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        minHeight: 'calc(100vh - 64px)',\r\n        color: 'white',\r\n        paddingTop: '100px',\r\n        paddingBottom: '40px'\r\n      }}>\r\n        <Container maxWidth=\"lg\">\r\n          <Box sx={{ textAlign: 'center', py: 8 }}>\r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n              Loading...\r\n            </Typography>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (products.length === 0) {\r\n    return (\r\n      <Box sx={{ \r\n        backgroundImage: `url(${paint})`, \r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        minHeight: 'calc(100vh - 64px)',\r\n        color: 'white',\r\n        paddingTop: '100px',\r\n        paddingBottom: '40px'\r\n      }}>\r\n        <Container maxWidth=\"lg\">\r\n          <Box sx={{ textAlign: 'center', py: 8 }}>\r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n              {category === 'digital-art' \r\n                ? t('products.categories.digitalArt')\r\n                : t(`products.categories.${category}`)\r\n              }\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n              {t('products.noProducts')}\r\n            </Typography>\r\n            <Button \r\n              variant=\"contained\" \r\n              onClick={() => navigate('/products')}\r\n              sx={{ mt: 3 }}\r\n            >\r\n              {t('common.backToProducts')}\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ \r\n      backgroundImage: `url(${paint})`, \r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n      backgroundRepeat: 'no-repeat',\r\n    minHeight: 'calc(100vh - 64px)',\r\n      color: 'white',\r\n      paddingTop: '100px',\r\n      paddingBottom: '40px'\r\n    }}>\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mb: 4 }}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            {category === 'digital-art' \r\n              ? t('products.categories.digitalArt')\r\n              : t(`products.categories.${category}`)\r\n            }\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n            {category === 'digital-art' \r\n              ? t('products.categories.digitalArtDescription')\r\n              : t(`products.categories.${category}Description`)\r\n            }\r\n          </Typography>\r\n        </Box>\r\n\r\n        {isMobile && (\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<FilterListIcon />}\r\n            onClick={() => setFilterOpen(true)}\r\n            sx={{ mb: 2 }}\r\n          >\r\n            {t('products.filters.title')}\r\n          </Button>\r\n        )}\r\n\r\n        <Grid container spacing={3}>\r\n          {!isMobile && (\r\n            <Grid item xs={12} md={3}>\r\n              <Box sx={{ position: 'sticky', top: '100px' }}>\r\n                <FilterContent />\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12} md={isMobile ? 12 : 9}>\r\n            {filteredProducts.length === 0 ? (\r\n              <Typography align=\"center\" color=\"text.secondary\">\r\n                {t('products.noProducts')}\r\n              </Typography>\r\n            ) : (\r\n              <>\r\n                <Grid container spacing={3}>\r\n                  {paginatedProducts.map((product) => (\r\n                    <Grid item xs={12} sm={6} md={4} key={product.id}>\r\n                      <ProductCard product={product} />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n\r\n                {totalPages > 1 && (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n                    <Pagination\r\n                      count={totalPages}\r\n                      page={currentPage}\r\n                      onChange={handlePageChange}\r\n                      color=\"primary\"\r\n                      size=\"large\"\r\n                      sx={{\r\n                        '& .MuiPaginationItem-root': {\r\n                          color: 'white',\r\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n                          '&:hover': {\r\n                            backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n                          },\r\n                        },\r\n                        '& .Mui-selected': {\r\n                          backgroundColor: 'white',\r\n                          color: 'black',\r\n                          '&:hover': {\r\n                            backgroundColor: 'white',\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                )}\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={filterOpen}\r\n          onClose={() => setFilterOpen(false)}\r\n        >\r\n          <Box sx={{ width: 280 }}>\r\n            <FilterContent />\r\n          </Box>\r\n        </Drawer>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CategoryProducts; "],"names":["_ref","product","id","title","description","price","imageUrl","category","artist","year","dimensions","navigate","useNavigate","t","useTranslation","_jsx","Card","sx","height","display","flexDirection","transition","transform","boxShadow","borderRadius","overflow","backgroundColor","width","maxWidth","children","_jsxs","Link","to","concat","style","textDecoration","color","onClick","e","preventDefault","window","scrollTo","top","left","behavior","CardMedia","component","image","alt","onError","currentTarget","src","heroImg","objectFit","margin","CardContent","flexGrow","p","Box","mb","Chip","label","size","fontSize","Typography","gutterBottom","variant","fontWeight","lineHeight","justifyContent","alignItems","mt","toFixed","CategoryProducts","useParams","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","products","setProducts","useState","loading","setLoading","sortBy","setSortBy","searchQuery","setSearchQuery","currentPage","setCurrentPage","filterOpen","setFilterOpen","priceRange","setPriceRange","useEffect","async","fetchProducts","handleSortChange","event","target","value","handleSearchChange","handlePriceChange","newValue","resetFilters","filteredProducts","filter","toLowerCase","includes","sort","a","b","localeCompare","totalPages","Math","ceil","length","paginatedProducts","slice","FilterContent","padding","IconButton","CloseIcon","FormControl","fullWidth","InputLabel","Select","onChange","MenuItem","TextField","Slider","valueLabelDisplay","min","max","Button","backgroundImage","paint","backgroundSize","backgroundPosition","backgroundRepeat","minHeight","paddingTop","paddingBottom","Container","textAlign","py","startIcon","FilterListIcon","Grid","container","spacing","item","xs","md","position","align","_Fragment","map","sm","ProductCard","Pagination","count","page","handlePageChange","Drawer","anchor","open","onClose"],"sourceRoot":""}